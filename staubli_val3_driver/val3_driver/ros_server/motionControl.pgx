<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="motionControl" access="public">
    <Locals>
      <Local name="l_mTrajPt" type="MotionBuffer" xsi:type="array" size="1" />
      <Local name="l_bFlag" type="bool" xsi:type="array" size="1" />
      <Local name="l_motion" type="MotionBuffer" xsi:type="array" size="1" />
      <Local name="l_nTime" type="num" xsi:type="array" size="1" />
      <Local name="l_bStopAndClean" type="bool" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  nMoveId = -1

  while (true)
    // check connection status, and whether to stop motion
    if (nDataIn == 1 and nDataOut == 1 and bStopNow == false)
      
      nMotionProgress = getMoveId()
      
      // process trajectory point from trajectory buffer
      if (libTrajPtBuffer:nElems > 0)
        call libTrajPtBuffer:pop(l_mTrajPt, l_bFlag)
        if (l_bFlag)
          nPtsPopped = nPtsPopped + 1
          call libMoveBuffer:push(l_mTrajPt, l_bFlag)
        endIf
      endIf
      
      // process motion command from move buffer
      // @TODO move buffer should have elements previously interpolated to ensure they are 4 ms apart
      if (libMoveBuffer:nElems > 0)
        call libMoveBuffer:pop(l_motion, l_bFlag)
        if (l_bFlag)
          if (l_motion.jJointRx != herej())
            nMovePts = nMovePts + 1
            // @TODO potentially set move id acording to sequence value
            nMoveId = movej(l_motion.jJointRx, tTool, l_motion.mDesc)
          endIf
        endIf
      endIf
    else
      // stop immediately -- resetMotion() also resets moveId
      resetMotion()
      // clear buffers
      call libTrajPtBuffer:clear()
      call libMoveBuffer:clear()
      bStopNow = false
      
      // debug
      nPtsPopped = 0
      nMovePts = 0
    endIf
    
    // sequence task
    delay(0)
  endWhile
end]]></Code>
  </Program>
</Programs>